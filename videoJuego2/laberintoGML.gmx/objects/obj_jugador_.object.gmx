<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_jugador_</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>velocidad = 4;

llavemorada = false;
llavedorada = false;
llaveroja = false;
llavegris = false;
llavenegra = false;

Diamante = false;
diamante2 = false;
diamante3 = false;
diamante4 = false;
diamante5 = false;
diamante6 = false;
diamante7 = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// movimiento del jugador 

if (!place_meeting(x-velocidad,y,obj_muro))&amp;&amp;(!place_meeting(x-velocidad,y,ObjPuertaPadre))
    {
    if (keyboard_check(vk_left)){x = x - velocidad;}
    }
if (!place_meeting(x+velocidad,y,obj_muro))&amp;&amp;(!place_meeting(x+velocidad,y,ObjPuertaPadre))
    {    
if (keyboard_check(vk_right)){x = x + velocidad;}
    }
if (!place_meeting(x,y-velocidad,obj_muro))&amp;&amp;(!place_meeting(x,y-velocidad,ObjPuertaPadre))
    {
if (keyboard_check(vk_up)){y = y - velocidad;}
    }
if (!place_meeting(x,y+velocidad,obj_muro))&amp;&amp;(!place_meeting(x,y+velocidad,ObjPuertaPadre))
    {
if (keyboard_check(vk_down)){y = y + velocidad;}
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gestión de las llaves 

/*  Se utilizará place_meeting para verificar la colisión con alguna llave
    luego se destruye la llave y se pone a true la variable respectiva en
    el objeto principal de llave.
    */
    
if (place_meeting(x,y, ObjLlaveRoja))
    {
    with(ObjLlaveRoja){instance_destroy();}
    llaveroja = true;
    audio_play_sound(snd_diamante, 10, false);
    }

if (place_meeting(x,y, ObjLlaveNegra))
    {
    with(ObjLlaveNegra){instance_destroy();}
    llavenegra = true;
    audio_play_sound(snd_diamante, 10, false);
    }

if (place_meeting(x,y, ObjLlaveDorada))
    {
    with(ObjLlaveDorada){instance_destroy();}
    llavedorada = true;
    audio_play_sound(snd_diamante, 10, false);
    }

if (place_meeting(x,y, ObjLlaveMorada))
    {
    with(ObjLlaveMorada){instance_destroy();}
    llavemorada = true;
    audio_play_sound(snd_diamante, 10, false); 
    }

if (place_meeting(x,y, ObjLlaveGris))
    {
    with(ObjLlaveGris){instance_destroy();}
    llavegris = true;
    audio_play_sound(snd_diamante, 10, false);
    }


    
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gestión de las puertas.
/* En forma similar a las llaves se verificará el estado de la variable
   respectiva de la llave, la colisión y luego se destruye la puerta.
   */
   

if(llaveroja)
   {
   if(place_meeting(x+velocidad, y, ObjPuertaRoja))||
   (place_meeting(x-velocidad, y, ObjPuertaRoja))||
   (place_meeting(x, y-velocidad, ObjPuertaRoja))||
   (place_meeting(x, y+velocidad, ObjPuertaRoja))
         {
         with(ObjPuertaRoja){instance_destroy();}
         audio_play_sound(snd_puerta, 10, false);
         }
   }

if(llavenegra)
   {
   if(place_meeting(x+velocidad, y, ObjPuertaNegra))||
   (place_meeting(x-velocidad, y, ObjPuertaNegra))||
   (place_meeting(x, y-velocidad, ObjPuertaNegra))||
   (place_meeting(x, y+velocidad, ObjPuertaNegra))
         {
         with(ObjPuertaNegra){instance_destroy();}
         audio_play_sound(snd_puerta, 10, false);
         }
   }

if(llavedorada)
   {
   if(place_meeting(x+velocidad, y, ObjPuertaDorada))||
   (place_meeting(x-velocidad, y, ObjPuertaDorada))||
   (place_meeting(x, y-velocidad, ObjPuertaDorada))||
   (place_meeting(x, y+velocidad, ObjPuertaDorada))
         {
         with(ObjPuertaDorada){instance_destroy();}
         audio_play_sound(snd_puerta, 10, false);
         }
   }

if(llavemorada)
   {
   if(place_meeting(x+velocidad, y, ObjPuertaMorada))||
   (place_meeting(x-velocidad, y, ObjPuertaMorada))||
   (place_meeting(x, y-velocidad, ObjPuertaMorada))||
   (place_meeting(x, y+velocidad, ObjPuertaMorada))
         {
         with(ObjPuertaMorada){instance_destroy();}
         audio_play_sound(snd_puerta, 10, false);
         }
   }

if(llavegris)
   {
   if(place_meeting(x+velocidad, y, ObjPuertaGris))||
   (place_meeting(x-velocidad, y, ObjPuertaGris))||
   (place_meeting(x, y-velocidad, ObjPuertaGris))||
   (place_meeting(x, y+velocidad, ObjPuertaGris))
         {
         with(ObjPuertaGris){instance_destroy();}
         audio_play_sound(snd_puerta, 10, false);
         }
   }




  
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// gestión de diamantes

if (place_meeting(x,y, obj_diamante))
    {
    with(obj_diamante){instance_destroy();}
    diamante = true;
    audio_play_sound(snd_diamante, 10, false);
    }
    
if (place_meeting(x,y, obj_diamante_2_))
    {
    with(obj_diamante_2_){instance_destroy();}
    diamante2 = true;
    audio_play_sound(snd_diamante, 10, false);
    }
    
if (place_meeting(x,y, obj_diamante3))
    {
    with(obj_diamante3){instance_destroy();}
    diamante3 = true;
    audio_play_sound(snd_diamante, 10, false);
    }
    
if (place_meeting(x,y, obj_diamante4))
    {
    with(obj_diamante4){instance_destroy();}
    diamante4 = true;
    audio_play_sound(snd_diamante, 10, false);
    }
    
if (place_meeting(x,y, obj_diamante5))
    {
    with(obj_diamante5){instance_destroy();}
    diamante5 = true;
    audio_play_sound(snd_diamante, 10, false);
    }
    
if (place_meeting(x,y, obj_diamante6))
    {
    with(obj_diamante6){instance_destroy();}
    diamante6 = true;
    audio_play_sound(snd_diamante, 10, false);
    }
    
if (place_meeting(x,y, obj_diamante7_))
    {
    with(obj_diamante7_){instance_destroy();}
    diamante7 = true;
    audio_play_sound(snd_diamante, 10, false);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemigoPadre">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
audio_play_sound(snd_Dead, 10, false);
room_restart();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>ObjGameOver</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>x-100</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>y-250</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_meta">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_meta_, 10, false);

if (room_exists(room_next(room)))
    {room_goto_next();}
    else
    {room_goto(inicio);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>sndFondo</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
